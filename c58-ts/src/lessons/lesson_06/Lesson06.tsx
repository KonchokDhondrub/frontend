import "./Lesson06.css";

export default function Lesson06() {
  // ! typescript

  // * string
  let username: string = "Pavel";
  username = "Daria";

  // * number
  let number: number = 42;
  number = 4.33;

  // * boolean
  let isAdmin: boolean = true;
  isAdmin = 10 < 2; // —ç—Ç–æ false

  // * null | undefined
  const nothing: undefined = undefined;
  let empty: null = null;

  // * union type (–æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤)
  let value: string | number = 42;

  //* type literals (–ª–∏—Ç–µ—Ä–∞–ª—å–Ω—ã–µ/–±—É–∫–≤–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã)
  let userRole: "ADMIN" | "CLIENT" | "GUEST" = "ADMIN";

  console.log("Type: ", typeof userRole);

  // * arrays (–º–∞—Å—Å–∏–≤—ã)
  const colors: string[] = ["red", "green", "blue"];
  colors.push("magenta");

  // * tupel (–∫–æ—Ä—Ç–µ–∂)
  const person: [string, number] = ["John", 35];

  // * strincted
  let planet: readonly [string, boolean] = ["Earth", true];

  // ! ts-nocheck
  // –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –≤—Å–µ–≥–æ —Ñ–∞–π–ª–∞
  // ! ts-ignore
  // –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤ –¥–ª—è –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏

  //* @ts-ignore
  // colors.push(42);

  // * functions
  // –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö –æ–±—è—Ö–∞—Ç–µ–ª—å–Ω–æ–π —è–≤–ª—è–µ—Ç—å—Å—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  // —Ç–∏–ø–∏–∑–∞—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â—ë–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ —è–≤–Ω–æ–π —Ç–∞–∫ –∏ –Ω–µ —è–≤–Ω–æ–π
  function sum(a: number, b: number): string {
    return "—Å—É–º–º–∞: " + (a + b);
  }
  sum(44, 66);

  const showMessage = (message: string | number): void => {
    console.log("your message:" + message);
  };

  // showMessage("üåû");
  // showMessage(33);

  // * any
  let someValue: any = "whatever you want";
  someValue = 10 + 90 + "d";
  someValue = undefined;

  return (
    <div className="lesson06-container">
      <h1>Lesson 06: TypeScript pt1 üíÅ‚Äç‚ôÇÔ∏è</h1>
      <p>–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –Ω–∞ —ç—Ç–æ–º —É—Ä–æ–∫–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ</p>
      <p>
        <b>
          let: <i>string</i>
        </b>{" "}
        - {username}
      </p>
      <p>
        <b>
          let: <i>number</i>
        </b>{" "}
        - {number}
      </p>
      <p>
        <b>
          let: <i>boolean</i>
        </b>{" "}
        - {isAdmin ? "True" : "False"}
      </p>
      <p>
        <b>
          let: <i>undefined</i>
        </b>{" "}
        - {nothing}nothing
      </p>
      <p>
        <b>
          let: <i>null</i>
        </b>{" "}
        - {empty}null
      </p>
      <p>
        <b>
          let: <i>string | number</i> (union type)
        </b>{" "}
        - {value}
      </p>
      <p>
        <b>
          const: <i>"ADMIN" | "CLIENT" | "GUEST"</i> (literal)
        </b>{" "}
        - {userRole}
      </p>
      <p>
        <b>
          const: <i>string[]</i> = ["","",""] (arrays: string[])
        </b>{" "}
        - {colors.join(", ")}
      </p>
      <p>
        <b>
          let <i>[string, number]</i> (tupel)
        </b>{" "}
        - {person.join(", ")}
      </p>
      <p>
        <b>
          let: <i>readonly</i> [string, boolean] (stricted)
        </b>{" "}
        - {planet.join(", ")}
      </p>
      <p>
        <b>
          function sum(a<i>: number</i> , b<i>: number</i>)<i>: string</i> '{' return "—Å—É–º–º–∞: " + (a + b) '}'
        </b>{" "}
        - sum(44, 66) = {sum(44, 66)}
      </p>
    </div>
  );
}
